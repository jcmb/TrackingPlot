<!DOCTYPE html>
<html lang="en">
<head>
   <link rel="stylesheet" type="text/css" href="/css/tcui-styles.css">
   <meta charset="utf-8" />
   <title>SNR Values</title>
   <meta name="generator" content="BBEdit 10.5" />
</head>
<body class="page">
<div class="container">
  <div style="padding: 10px 10px 10px 0 ;"> <a href="./">
        <img src="/images/trimble-logo.jpg" alt="Trimble Logo" id="l
ogo"> </a>
      </div>
  <!-- end #logo-area -->
</div>
<div id="top-header-trim"></div>
<div id="content-area">
<div id="content">
<div id="main-content">

<script src="/libraries/jquery-1.10.2.min.js"></script>
<script src="/libraries/highcharts.js"></script>
<script src="/libraries/highcharts-more.js"></script>
<script src="/libraries/exporting.js"></script>
<h1 id="title">SNR: <!--#include virtual="file.html" --></h1>
<div id="container"></div>

<!--#include virtual="Buttons.html" -->
<p/>
<script>
create_Buttons("SNR")
</script>

<script>

function getURLParameter(name) {
    return decodeURI(
        (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search)||[,null])[1]
    );
}

//console.log("Before create plot")
function create_plot(System,Freq,Signal) {
    $("body").css("cursor", "progress");
    File_Name=System + "-" +Freq + "-" +Signal +".MEAN";
//    console.log(File_Name)
    var options = {
        chart: {
            renderTo: 'container',
            defaultSeriesType: 'spline',
            zoomType:"xy",
        },
        title: {
            text: 'SNRs ( ' + System + " " +Freq + "-" + Signal + ' )'
        },
        xAxis : {
            min:10,
            max:90,
            title: {
                text: 'Elevation'
            }
        },
        yAxis: {
            min:0,
            title: {
                text: 'SNR'
            }
        },
        series: [
            {
            name: 'Expected SNR',
            lineWidth: 1,
            marker:
                {
                    enabled: false,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            },
            {
            name: 'Observed SNR',
            lineWidth: 1,
            marker:
                {
                    enabled: false,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            },
            {
                name: 'SNR (ErrorBar, 1 Sigma)',
                lineWidth: 1,
                type: 'errorbar'
            },
            {
                name: 'Min',
                lineWidth: 1,
                visible: false,
                marker:
                {
                    enabled: false,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            },
            {
                name: 'Max',
                lineWidth: 1,
                visible: false,
                marker:
                {
                    enabled: false,
                    states: {
                        hover: {
                            enabled: true
                        }
                    }
                }
            }
            ]
        }

    series_data=[];
    series_data[0]=new Array()
    series_data[1]=new Array()
    series_data[2]=new Array()
    series_data[3]=new Array()
    series_data[4]=new Array()

    $("body").css("cursor", "wait");
    $.get(File_Name, function(data) {
        // Split the lines
        var lines = data.split('\n');

        // Iterate over the lines and add categories or series
        $.each(lines, function(lineNo, line) {
            var items = line.split(',');
            if (items[0]) {
                if ( items[1] > 0) {
                    series_data[0].push([items[0],parseFloat(items[2])]);
                    series_data[1].push([items[0],parseFloat(items[2])-parseFloat(items[3]),parseFloat(items[2])+parseFloat(items[3])]);
                    series_data[2].push([items[0],parseFloat(items[4])]);
                    series_data[3].push([items[0],parseFloat(items[5])]);
                    }
                else {
                    series_data[0].push(null)
                    series_data[1].push(null)
                    series_data[2].push(null)
                    series_data[3].push(null)
                    }
                }
            }   );

        // Create the chart. It has to be done here as it is made on the call back
        if ( System == "GPS")  {
            if ( Freq == "L1" ) {
                // GPS L1 CA
                options.series[0].data=[0,0,0,0,0,0,0,0,0,40.1,40.1,40.5,41.2,40.8,41.5,41.9,42.0,42.3,42.7,43.1,43.3,43.5,43.9,44.2,44.3,44.7,45.0,45.2,45.4,45.7,45.9,46.1,46.4,46.6,46.8,47.0,47.3,47.4,47.8,47.9,48.1,48.3,48.4,48.5,48.9,49.0,49.2,49.2,49.3,49.4,49.5,49.5,49.6,49.7,49.6,49.8,49.8,49.9,49.8,49.9,49.9,49.9,50.1,50.1,50.0,49.9,49.7,49.7,49.5,49.4,49.7,49.9,49.7,49.6,49.7,49.5,49.6,49.8,49.7,49.6,49.7,49.4,49.1,50.4,50.3,49.9,50.7,50.6,50.4,50.4,50.4]
                }
            if ( Freq == "L2" ) {
                if ( Signal == "E")  {
                    // GPS L2 E
                    options.series[0].data=[0,0,0,0,0,0,0,0,0,22,22.0,22.3,22.6,22.3,23.6,24.0,24.3,25.2,25.8,26.2,26.9,27.4,28.1,28.7,29.1,29.8,30.4,30.6,31.0,31.4,31.8,32.3,32.8,33.3,33.5,34.0,34.4,34.7,35.2,35.9,36.1,36.5,36.8,37.1,37.4,37.7,38.1,38.3,38.7,39.0,39.3,39.5,39.4,39.7,39.9,40.1,40.2,40.4,40.6,40.8,40.8,41.0,41.0,41.1,41.2,41.3,41.4,41.5,41.4,41.4,41.7,41.8,41.8,42.0,42.2,41.8,41.9,42.0,42.0,42.0,42.0,41.9,41.8,43.4,43.5,43.3,43.6,43.6,43.5,43.5,43.5]
                    }
                if ( Signal == "CS")  {
                    // GPS L2 CS
                    options.series[0].data=[0,0,0,0,0,0,0,0,0,39.3,39.3,39.4,39.0,39.1,40.2,40.3,40.3,40.8,41.1,41.0,41.6,42.2,42.4,42.4,42.7,43.1,43.5,43.6,43.9,44.3,44.5,44.7,45.1,45.4,45.4,45.7,46.2,46.2,46.1,46.4,46.6,46.3,46.6,47.3,46.3,46.5,46.6,46.8,47.0,47.2,47.4,47.5,47.7,47.9,48.1,48.0,48.1,48.2,48.3,48.5,48.7,48.8,48.9,49.1,49.3,49.4,49.6,49.7,49.8,49.8,49.9,50.1,50.2,50.5,50.7,50.8,50.9,50.9,51.1,51.2,51.4,51.4,51.5,51.5,51.7,51.7,51.7,51.8,51.8,51.8,51.8]
                    }
                }
            if ( Freq == "L5" ) {
                // GPS L1 CA, which is of course not L5 IQ //TODO Fix this
                options.series[0].data=[0,0,0,0,0,0,0,0,0,40.1,40.1,40.5,41.2,40.8,41.5,41.9,42.0,42.3,42.7,43.1,43.3,43.5,43.9,44.2,44.3,44.7,45.0,45.2,45.4,45.7,45.9,46.1,46.4,46.6,46.8,47.0,47.3,47.4,47.8,47.9,48.1,48.3,48.4,48.5,48.9,49.0,49.2,49.2,49.3,49.4,49.5,49.5,49.6,49.7,49.6,49.8,49.8,49.9,49.8,49.9,49.9,49.9,50.1,50.1,50.0,49.9,49.7,49.7,49.5,49.4,49.7,49.9,49.7,49.6,49.7,49.5,49.6,49.8,49.7,49.6,49.7,49.4,49.1,50.4,50.3,49.9,50.7,50.6,50.4,50.4,50.4]
                }
            }

        if ( System == "GLONASS")  {
            if ( Freq == "L1" ) {
                if ( Signal == "CA")  {
                    // GLONASS L1 CA
                    options.series[0].data=[0,0,0,0,0,0,0,0,0,40.6,40.6,41.5,42.2,41.9,42.6,42.6,42.9,43.3,43.4,43.8,44.2,44.3,44.6,44.7,45.1,45.4,45.7,45.9,46.2,46.4,46.5,46.8,47.0,47.3,47.5,47.7,47.9,48.1,48.3,48.3,48.5,48.8,49.0,49.1,49.2,49.4,49.4,49.6,49.7,49.8,49.9,49.9,50.0,50.1,50.2,50.2,50.3,50.2,50.2,50.3,50.4,50.2,50.2,50.7,50.4,50.2,50.1,50.2,50.0,50.0,50.0,50.0,49.9,49.9,49.8,49.8,49.6,49.6,49.4,49.1,49.5,50.0,49.6,49.3,49.2,49.1,49.2,48.7,49.2,49.2,49.2]
                    }
                if ( Signal == "P")  {
                    // GLONASS L1 P
                    options.series[0].data=[0,0,0,0,0,0,0,0,0,39.2,39.2,40.1,40.8,40.5,41.2,41.2,41.4,41.8,42.0,42.4,42.7,42.9,43.2,43.3,43.7,44.0,44.3,44.6,44.8,45.0,45.1,45.5,45.6,45.8,46.1,46.3,46.4,46.7,46.8,46.8,47.0,47.3,47.4,47.6,47.7,47.8,47.8,48.0,48.0,48.1,48.2,48.2,48.3,48.4,48.4,48.5,48.6,48.5,48.5,48.6,48.7,48.5,48.5,49.0,48.7,48.5,48.4,48.6,48.4,48.4,48.4,48.4,48.3,48.3,48.3,48.2,48.1,48.1,47.9,47.6,48.0,48.5,48.1,47.8,47.8,47.6,47.8,47.2,47.9,47.9,47.9]
                    }
                }
            if ( Freq == "L2" ) {
                if ( Signal == "CA")  {
                    // GLONASS L2 CA
                    options.series[0].data=[0,0,0,0,0,0,0,0,0,38.5,38.5,38.4,38.2,38.5,39.2,39.1,39.4,40.1,40.0,40.3,40.6,41.2,41.0,41.2,41.8,42.0,42.1,42.5,42.6,42.7,43.0,43.3,43.6,43.8,43.9,44.3,44.5,44.7,44.7,44.9,45.3,45.4,45.6,45.8,46.0,46.1,46.0,46.3,46.5,46.6,46.7,46.8,47.0,47.2,47.2,47.3,47.4,47.3,47.6,48.0,47.8,47.9,47.9,48.2,48.2,48.1,47.7,47.8,48.0,48.1,48.2,48.2,48.4,48.5,48.5,48.4,48.4,48.5,48.3,48.3,48.3,49.0,48.9,48.6,48.6,48.7,48.7,47.7,47.2,47.2,47.2]
                    }
                if ( Signal == "P")  {
                    // GLONASS L2 P
                    options.series[0].data=[0,0,0,0,0,0,0,0,0,37.8,37.8,37.7,37.6,37.9,38.6,38.5,38.7,39.4,39.4,39.6,40.0,40.5,40.4,40.5,41.2,41.4,41.5,41.8,42.0,42.0,42.3,42.7,43.0,43.1,43.2,43.6,43.8,44.0,44.0,44.3,44.7,44.7,44.9,45.2,45.3,45.4,45.4,45.7,45.9,46.0,46.1,46.2,46.4,46.5,46.6,46.7,46.8,46.6,46.9,47.4,47.2,47.3,47.2,47.5,47.6,47.5,47.1,47.2,47.4,47.5,47.6,47.6,47.7,47.9,47.9,47.8,47.8,47.8,47.6,47.6,47.8,48.4,48.3,48.0,48.0,48.0,48.0,47.0,46.7,46.7,46.7]
                    }
                }
            }
        options.series[1].data=series_data[0]
        options.series[2].data=series_data[1]
        options.series[3].data=series_data[2]
        options.series[4].data=series_data[3]
        var chart = new Highcharts.Chart(options);
        $("body").css("cursor", "default");
        });
    }

System=getURLParameter("SYSTEM")
Freq=getURLParameter("FREQ")
Signal=getURLParameter("SIGNAL")
if ( System == "null")  {
    System="GPS"
    }

if ( Freq == "null")  {
    Freq="L1"
    }

if ( Signal == "null")  {
    Signal="CA";
    }


create_plot(System,Freq,Signal)
</script>
</div>
</div>
</div>
</body>
</html>
